<?xml version="1.0" encoding="utf-8" ?>
<!--    scan="true"
        scanPeriod="60 seconds"
        debug="false"
     -->
<configuration>
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <springProperty scope="context" name="log_path" source="logging.home" defaultValue="logs"/>
    <property name="LOG_HOME" value="${log_path}"></property>

    <springProperty scope="context" name="logName" source="logging.name" defaultValue="metadata"/>
    <property name="LOG_NAME" value="${logName}"></property>

    <property name="log.root.level" value="ERROR"></property>
    <property name="DEBUG_LOG_NAME" value="${LOG_NAME}-debug"></property>
    <property name="INFO_LOG_NAME" value="${LOG_NAME}-info"></property>
    <property name="WARN_LOG_NAME" value="${LOG_NAME}-warn"></property>
    <property name="ERROR_LOG_NAME" value="${LOG_NAME}-error"></property>

    <!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />

    <!--
    %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{80}.%M-%line -%msg%n
    %d 日期
    %thread 线程名
    %-5level 日志级别 从左向右5个字符
    %logger{80} 日志类
    %M 方法名称
    %line 行数
    %msg 日志内容
    %n 换行
    -->
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
    <!--<property name="FILE_LOG_PATTERN" value="${FILE_LOG_PATTERN:-%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } -&#45;&#45; [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>-->
    <property name="FILE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{80}.%M-%line -%msg%n"/>
    <!-- Console 输出设置 -->
    <appender name="CONSOLE_LOG" class = "ch.qos.logback.core.ConsoleAppender">
        <!--此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>info</level>
        </filter>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>
                ${CONSOLE_LOG_PATTERN}
            </pattern>
        </layout>
    </appender>

    <!--输出debug日志-->
    <appender name="DEBUG_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${LOG_HOME}/${DEBUG_LOG_NAME}.log</file>
        <!-- 此日志文件只记录debug级别的 -->
        <!--
             级别过滤器，根据日志级别进行过滤。如果日志级别等于配置级别，过滤器会根据onMath 和 onMismatch接收或拒绝日志
            <level>:设置过滤级别
            <onMatch>:用于配置符合过滤条件的操作
            <onMismatch>:用于配置不符合过滤条件的操作
            ACCEPT 接收
            NEUTRAL 有序列表里的下个过滤器过接着处理日志
            DENY 日志将立即被抛弃不再经过其他过滤器
        -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder>
            <!--日志文件输出格式-->
            <pattern>
                ${FILE_LOG_PATTERN}
            </pattern>
            <!-- 此处设置字符集 -->
            <charset>UTF-8</charset>
        </encoder>
        <!-- RollingFileAppender:滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 -->
        <!-- 1.先按日期存日志，日期变了，将前一天的日志文件名重命名为xxx%日期%索引，新的日志仍然是sys.log -->
        <!-- 2.如果日期没有变化，但是当前日志文件的大小超过5MB时(默认值是10MB)，对当前日志进行分割 重名名 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>
                <!--%d 日期格式 %i 指定Rolling时的序号-->
                ${LOG_HOME}/backup/${DEBUG_LOG_NAME}-%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <!--产生的日志文件保留天数-->
            <maxHistory>15</maxHistory>
            <!--指定回滚大小-->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>5MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <appender name="INFO_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder>
            <pattern>
                ${FILE_LOG_PATTERN}
            </pattern>
            <charset>UTF-8</charset>
        </encoder>
        <file>${LOG_HOME}/${INFO_LOG_NAME}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>
                ${LOG_HOME}/backup/${INFO_LOG_NAME}-%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <maxHistory>15</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>5MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <appender name="WARN_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder>
            <pattern>
                ${FILE_LOG_PATTERN}
            </pattern>
            <charset>UTF-8</charset>
        </encoder>
        <file>${LOG_HOME}/${WARN_LOG_NAME}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>
                ${LOG_HOME}/backup/${WARN_LOG_NAME}-%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <maxHistory>15</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>5MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <appender name="ERROR_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder>
            <pattern>
                ${FILE_LOG_PATTERN}
            </pattern>
            <charset>UTF-8</charset>
        </encoder>
        <file>${LOG_HOME}/${ERROR_LOG_NAME}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>
                ${LOG_HOME}/backup/${ERROR_LOG_NAME}-%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <maxHistory>15</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>5MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <!--输出到mysql数据库的appender配置     -->
    <!--<appender name="db" class="ch.qos.logback.classic.db.DBAppender">-->
    <!--<connectionSource-->
    <!--class="ch.qos.logback.core.db.DriverManagerConnectionSource">-->
    <!--<driverClass>com.mysql.jdbc.Driver</driverClass>-->
    <!--<url>jdbc:mysql://120.77.222.42:3306/logback_member?characterEncoding=utf8</url>-->
    <!--<user>root</user>-->
    <!--<password>a123456789</password>-->
    <!--</connectionSource>-->
    <!--</appender>-->

    <!--<logger name="org.hibernate" level="error"/>-->
    <!--<logger name="org.springframework" level="error"/>-->
    <!--<logger name="org.apache.zookeeper" level="error"/>-->
    <!--<logger name="com.netflix" level="error"/>-->

    <root level="${log.root.level}">
        <appender-ref ref="CONSOLE_LOG"/>
        <appender-ref ref="DEBUG_LOG"/>
        <appender-ref ref="INFO_LOG"/>
        <appender-ref ref="WARN_LOG"/>
        <appender-ref ref="ERROR_LOG"/>
    </root>
</configuration>